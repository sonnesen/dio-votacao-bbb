openapi: 3.0.2
info:
  title: Votação BBB API
  version: '1.0'
servers:
  - url: http://localhost:8080/api/v1
tags:
  - name: Status
  - name: Parameters
  - name: Participants
  - name: Voting
paths:
  /status:
    get:
      tags:
        - Status
      operationId: getStatus
      responses:
        '200':
          description: successful operation
          content:
            text/plain:
              schema:
                type: string
  /parameters:
    get:
      tags:
        - Parameters
      operationId: retrieveAllParameters
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParameterResponse'
    post:
      tags:
        - Parameters
      operationId: saveParameter
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/ParameterRequest'
        required: true
      responses:
        '201':
          description: Parameter created
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ParameterResponse'
  /parameters/{id}:
    get:
      tags:
        - Parameters
      operationId: retrieveParameterById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ParameterResponse'
        '404':
          description: Parameter not found
  /participants:
    get:
      tags:
        - Participants
      operationId: retrieveAllParticipants
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParticipantResponse'
    post:
      tags:
        - Participants
      operationId: saveParticipant
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/ParticipantRequest'
        required: true
      responses:
        '201':
          description: Participant created
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ParticipantResponse'
  /participants/{id}:
    get:
      tags:
        - Participants
      operationId: retrieveParticipantById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ParticipantResponse'
        '404':
          description: Participant not found
  /voting:
    post:
      tags:
        - Voting
      operationId: vote
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/VotingRequest"
      responses:
        "201":
          description: "Computed vote"

components:
  schemas:
    ParameterRequest:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    ParameterResponse:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    ParticipantRequest:
      type: object
      properties:
        name:
          type: string
    ParticipantResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    VotingRequest:
      type: object
      properties:
        id:
          type: string
